@page
@model alasos.Pages.RegisterModel
@{
}

    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap"
      data-tag="font"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&amp;display=swap"
      data-tag="font"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap"
      data-tag="font"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap"
      data-tag="font"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&amp;display=swap"
      data-tag="font"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Spectral:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,200;1,300;1,400;1,500;1,600;1,700;1,800&amp;display=swap"
      data-tag="font"
    />
    <link rel="stylesheet" href="./site.css" />


<script type="text/javascript"
        src="https://npmcdn.com/parse/dist/parse.min.js"></script>

<body>
    <div>
        <link href="./register.css" rel="stylesheet" />

        <div class="register-container">
            <div class="register-container01">
                <div class="register-container02">
                    <h1 class="register-text">Heading</h1>
                    <div class="register-input-container">
                        <label class="register-label">Label</label>
                        <input type="text" required="" class="register-textinput input" />
                    </div>
                    <div class="register-input-container">
                        <label class="register-label">Label</label>
                        <input type="text"
                               required=""
                               class="register-textinput input" />
                    </div>
                    <div class="register-button-container">
                        <button class="register-button button">Button</button>
                        <button class="register-button1 button">Button</button>
                    </div>
                </div>
                <div class="register-container06">
                    <h1 class="register-text3">Register User</h1>
                    <div class="register-input-container">
                        <label class="register-label">Username</label>
                        <input type="text"
                               required=""
                               class="register-textinput input" />
                    </div>
                    <div class="register-input-container">
                        <label class="register-label">Label</label>
                        <input id="username" type="text"
                               required=""
                               class="register-textinput input" />
                    </div>
                    <div class="register-input-container">
                        <label class="register-label">Label</label>
                        <input type="text"
                               required=""
                               class="register-textinput input" />
                    </div>
                    <div class="register-input-container">
                        <label class="register-label">Label</label>
                        <input type="text"
                               required=""
                               class="register-textinput input" />
                    </div>
                    <div class="register-button-container">
                        <button class="register-button button">Button</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>



<div class="container">

    <input id="username" type="text" placeholder="Username" />
    <input id="password" type="text" placeholder="Password" />
    <br />
    <input id="name" type="text" placeholder="Name" />
    <input id="email" type="email" placeholder="Email" />
    <br />
    <button id="createButton">Create User</button>

</div>

<script>
    // Initialize Parse
    Parse.initialize("HvzrJkjsa2qdjRy9auBDdCB70BdAFSHyNPUhQWiG", "kXDz3UWCXJ17njfb4vwjZ7e7QWPKfIHTk7yXuY9j"); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY
    Parse.serverURL = "https://parseapi.back4app.com/";

    // Create a new User
    async function createParseUser() {
        // Creates a new Parse "User" object, which is created by default in your Parse app
        let user = new Parse.User();
        // Set the input values to the new "User" object
        user.set("name", document.getElementById("name").value);
        user.set("username", document.getElementById("username").value);
        user.set("password", document.getElementById("password").value);
        user.set("email", document.getElementById("email").value);

        try {
            // Call the save method, which returns the saved object if successful
            user = await user.save();
            if (user !== null) {
                // Notify the success by getting the attributes from the "User" object, by using the get method (the id attribute needs to be accessed directly, though)
                alert(
                    `New object created with success! ObjectId: ${user.id
                    }, ${user.get("username")}`
                );
            }
        } catch (error) {
            alert(`Error: ${error.message}`);
        }
    }

    // Add on click listener to call the create parse user function
    document.getElementById("createButton").addEventListener("click", async function () {
        createParseUser();
    });
</script>